<?php
/**
 * @file
 * Views Fiters Selective Module
 */

/**
 * Implements hook_views_api().
 */
function views_filters_selective_views_api() {
  return array(
    'api' => 3.0,
  );
}

/**
 * Implements hook_views_filters_selective_handler().
 */
function views_filters_selective_views_filters_selective_handler() {
  return array(
    'views_handler_filter' => 'views_filters_selective_handler_filter',
  );
}

/**
 * Callback implementation for generic filter.
 */
function views_filters_selective_handler_filter($filter, $oids) {
  $options = array();
  foreach ($oids as $id) {
    $options[] = $id;
  }
  return $options;
}

/**
 * Implements hook_init().
 */
function views_filters_selective_init() {
    drupal_add_js("jQuery.fn.attachBehaviors = function(){Drupal.attachBehaviors();}", array('type'=>'inline'));
}

/**
 * Implements hook_views_ajax_data_alter().
 */
function views_filters_selective_views_ajax_data_alter(&$commands, $view) {
  // Refreshes the filter block when filters are exposed
  // in a block.
  if ($view->display_handler->get_option('exposed_block') && is_array($view->filter)) {
    // Only refresh if at least one of the filters is of type selective
    // in order to minimize impact of any possible bug.
    foreach ($view->filter as $filter) {
      if (get_class($filter) == "views_handler_filter_selective") {
        $refresh = TRUE;
        break;
      }
    }
    if ($refresh == TRUE) {
      $exposed_block_plugin = $view->display_handler->get_plugin('exposed_form');
      $commands[] = ajax_command_replace('#views-exposed-form-' . $view->name . '-' . $view->display_handler->display->id, $exposed_block_plugin->render_exposed_form(true));
      $commands[] = ajax_command_invoke(null, "attachBehaviors");
	}
  }
}
